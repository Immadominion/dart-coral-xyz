include: package:lints/recommended.yaml

linter:
  rules:
    # Code Quality
    - avoid_print
    - avoid_unnecessary_containers
    - prefer_const_constructors
    - prefer_const_literals_to_create_immutables
    - prefer_final_fields
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_if_null_operators
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_single_quotes
    - require_trailing_commas
    
    # Performance
    - avoid_function_literals_in_foreach_calls
    - prefer_for_elements_to_map_fromIterable
    - prefer_spread_collections
    - unnecessary_lambdas
    
    # Error Handling
    - avoid_catches_without_on_clauses
    - avoid_catching_errors
    - only_throw_errors
    - use_rethrow_when_possible
    
    # Documentation
    - public_member_api_docs
    - package_api_docs
    - comment_references
    
    # Type Safety
    - avoid_dynamic_calls
    - avoid_type_to_string
    - prefer_typing_uninitialized_variables
    - unnecessary_null_checks
    - unnecessary_nullable_for_final_variable_declarations
    
    # Style
    - always_declare_return_types
    - always_put_required_named_parameters_first
    - always_use_package_imports
    - avoid_bool_literals_in_conditional_expressions
    - avoid_field_initializers_in_const_classes
    - avoid_init_to_null
    - avoid_multiple_declarations_per_line
    - avoid_positional_boolean_parameters
    - avoid_redundant_argument_values
    - avoid_return_types_on_setters
    - avoid_returning_null_for_void
    - avoid_setters_without_getters
    - avoid_unused_constructor_parameters
    - avoid_void_async
    - cascade_invocations
    - conditional_uri_does_not_exist
    - constant_identifier_names
    - curly_braces_in_flow_control_structures
    - directives_ordering
    - empty_catches
    - empty_constructor_bodies
    - empty_statements
    - exhaustive_cases
    - file_names
    - implementation_imports
    - join_return_with_assignment
    - leading_newlines_in_multiline_strings
    - library_names
    - library_prefixes
    - lines_longer_than_80_chars
    - missing_whitespace_between_adjacent_strings
    - no_adjacent_strings_in_list
    - no_duplicate_case_values
    - no_logic_in_create_state
    - non_constant_identifier_names
    - null_closures
    - one_member_abstracts
    - overridden_fields
    - package_names
    - parameter_assignments
    - prefer_adjacent_string_concatenation
    - prefer_asserts_in_initializer_lists
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_contains
    - prefer_expression_function_bodies
    - prefer_function_declarations_over_variables
    - prefer_generic_function_type_aliases
    - prefer_initializing_formals
    - prefer_inlined_adds
    - prefer_int_literals
    - prefer_interpolation_to_compose_strings
    - prefer_iterable_whereType
    - prefer_null_aware_operators
    - prefer_relative_imports
    - prefer_void_to_null
    - provide_deprecation_message
    - recursive_getters
    - sized_box_for_whitespace
    - slash_for_doc_comments
    - sort_constructors_first
    - sort_pub_dependencies
    - sort_unnamed_constructors_first
    - test_types_in_equals
    - throw_in_finally
    - type_annotate_public_apis
    - type_init_formals
    - unawaited_futures
    - unnecessary_await_in_return
    - unnecessary_brace_in_string_interps
    - unnecessary_const
    - unnecessary_constructor_name
    - unnecessary_getters_setters
    - unnecessary_new
    - unnecessary_null_aware_assignments
    - unnecessary_null_in_if_null_operators
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_raw_strings
    - unnecessary_string_escapes
    - unnecessary_string_interpolations
    - unnecessary_this
    - unrelated_type_equality_checks
    - use_build_context_synchronously
    - use_colored_box
    - use_decorated_box
    - use_function_type_syntax_for_parameters
    - use_if_null_to_convert_nulls_to_bools
    - use_is_even_rather_than_modulo
    - use_named_constants
    - use_raw_strings
    - use_string_buffers
    - use_super_parameters
    - use_test_throws_matchers
    - use_to_and_as_if_applicable
    - valid_regexps
    - void_checks
    
analyzer:
  exclude:
    - "build/**"
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.config.dart"
    - "lib/generated_plugin_registrant.dart"
  
  strong-mode:
    implicit-casts: false
    implicit-dynamic: false
  
  errors:
    # Treat specific warnings as errors
    missing_required_param: error
    missing_return: error
    dead_code: warning
    unused_import: warning
    unused_local_variable: warning
    # Ignore certain warnings
    invalid_annotation_target: ignore
    todo: ignore
    
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true
