name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        dart-version: ['3.0.0', 'stable']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Dart
      uses: dart-lang/setup-dart@v1
      with:
        dart-version: ${{ matrix.dart-version }}
    
    - name: Install dependencies
      run: dart pub get
    
    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed .
    
    - name: Analyze project source
      run: dart analyze --fatal-infos
    
    - name: Run tests
      run: dart test
    
    - name: Check publish warnings
      run: dart pub publish --dry-run

  coverage:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Dart
      uses: dart-lang/setup-dart@v1
      with:
        dart-version: 'stable'
    
    - name: Install dependencies
      run: dart pub get
    
    - name: Install coverage tools
      run: dart pub global activate coverage
    
    - name: Run tests with coverage
      run: dart test --coverage=coverage
    
    - name: Convert coverage
      run: dart pub global run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --packages=.dart_tool/package_config.json --report-on=lib
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info

  publish:
    runs-on: ubuntu-latest
    needs: [test, coverage]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Dart
      uses: dart-lang/setup-dart@v1
      with:
        dart-version: 'stable'
    
    - name: Install dependencies
      run: dart pub get
    
    - name: Setup pub credentials
      run: |
        mkdir -p ~/.pub-cache
        echo '${{ secrets.PUB_CREDENTIALS }}' > ~/.pub-cache/credentials.json
    
    - name: Publish to pub.dev
      run: dart pub publish --force
